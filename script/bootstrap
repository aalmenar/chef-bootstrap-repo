#!/usr/bin/env bash
set -e
[ -n "$BOOTSTRAP_DEBUG" ] && set -x

banner()  { printf -- "-----> $*\n"; }
log()     { printf -- "       $*\n"; }
warn()    { printf -- ">>>>>> $*\n"; }
fail()    { printf -- "\nERROR: $*\n" ; exit 1 ; }

if ! command -v direnv >/dev/null ; then
  warn "The direnv command is not installed and helps in using"
  warn "this project."
  warn ""
  warn "Please visit https://github.com/zimbatm/direnv for more details."
  warn ""
  warn "If you are on a mac and using homebrew, install it with:"
  warn ""
  warn "    $ brew install direnv"
  warn ""
  warn "Follow the post-install instructions, and re-run $0"
  warn "\n"
fi

if ! command -v bundle >/dev/null ; then
  banner "Installing bundler gem"
  gem install bundler
fi

bundle_cmd="bundle install --path vendor/bundle --binstubs bin"
banner "Running Bundler with '$bundle_cmd'"
$bundle_cmd

if [ ! -f "$(dirname $0)/../.envrc" ] ; then
  banner "Creating .envrc"
  printf "Enter the logical name for your chef server (FQDN perhaps?)\n"
  printf "name> "
  read NAME

  env_sh="$HOME/.chef/$NAME/env.sh"

  if [ ! -d "$(dirname $env_sh)" ] ; then
    log "Creating $(dirname $env_sh) directory"
    mkdir -p "$(dirname $env_sh)"
  fi

  if [ ! -f "$env_sh" ] ; then
    log "Creating $env_sh (please edit afterwards)"
    cat <<_END_OF_ENV > "$env_sh"
export KNIFE_CHEF_SERVER_URL="https://$NAME"
export KNIFE_VALIDATION_KEY="\$HOME/.chef/$NAME/validation.pem"
export KNIFE_CLIENT_KEY="\$HOME/.chef/$NAME/$USER.pem"

export AWS_ACCESS_KEY=""
export AWS_SECRET_KEY=""
export AWS_AWS_SSH_KEY_ID=""
export AWS_REGION=""
export AWS_AVAILABILITY_ZONE=""
export AWS_FLAVOR=""
export AWS_IMAGE=""

export BLUEBOX_CUSTOMER_ID=""
export BLUEBOX_API_KEY=""

export DIGITAL_OCEAN_CLIENT_ID=""
export DIGITAL_OCEAN_API_KEY=""

export LINODE_API_KEY=""

export RACKSPACE_USERNAME=""
export RACKSPACE_API_KEY=""
_END_OF_ENV
  fi

  cat <<_END_OF_ENVRC > "$(dirname $0)/../.envrc"
PATH_add bin
PATH_add script

# load knife config vars
for config in \$HOME/.chef/$NAME/env.sh \$HOME/.chef/$NAME/env-*.sh ; do
  if [ -f "\$config" ] ; then
    echo "direnv: loading \$config"
    eval \$(cat \$config)
  fi
done ; unset config
_END_OF_ENVRC

  if command -v direnv >/dev/null ; then
    log "Trusting .envrc"
    direnv allow "$(dirname $0)/../.envrc"
  fi
fi

if [ -f "$(dirname $0)/../Berksfile" ] ; then
  resolver_bin="$(dirname $0)/../bin/berks"
  resolver_args="install"
  if [ ! -x "$resolver_bin" ] ; then
    fail "Berkshelf gem is not in Gemfile, please add and re-run"
  fi
  banner "Running Berkshelf with '$(basename $resolver_bin) $resolver_args'"
  $resolver_bin $resolver_args
elif [ -f "$(dirname $0)/../Cheffile" ] ; then
  resolver_bin="$(dirname $0)/../bin/librarian-chef"
  resolver_args="install --path cookbooks"
  if [ ! -x "$resolver_bin" ] ; then
    fail "librarian-chef gem is not in Gemfile, please add and re-run"
  fi
  banner "Running Librarian-Chef with '$(basename $resolver_bin) $resolver_args'"
  $resolver_bin $resolver_args
fi

banner "Loading .envrc"
touch "$(dirname $0)/../.envrc"

banner 'All ready!'
